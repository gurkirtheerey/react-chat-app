{"version":3,"sources":["components/CreateRoom.tsx","components/Form.tsx","components/Message.tsx","components/MessageBox.tsx","components/Room.tsx","api.js","features/auth/authSlice.ts","features/room/roomSlice.ts","socket.js","views/Home.tsx","components/Loader.jsx","views/Login.tsx","views/Register.tsx","ProtectedRoute.js","components/ToastNotification.tsx","App.tsx","features/counter/counterSlice.ts","app/store.ts","index.tsx"],"names":["CreateRoom","roomText","setRoomText","create","className","value","onChange","e","target","type","placeholder","onClick","Form","sendMessage","text","setText","onSubmit","Message","message","user","userId","username","useSelector","state","auth","id","MessageBox","messages","room","useState","scroll","setScroll","undefined","useEffect","messageBox","document","getElementById","scrollHeight","scrollTop","length","map","_id","Room","join","name","String","instance","axios","baseURL","initialState","isLoggedIn","socketId","loading","authSlice","createSlice","reducers","saveUser","action","payload","setRoom","setLoading","login","token","localStorage","setItem","register","logout","removeItem","toast","success","resetUser","verify","loginUser","password","dispatch","a","post","data","error","console","log","registerUser","email","response","actions","roomSlice","rooms","setRooms","socket","io","transports","Home","toggle","setToggle","useDispatch","get","on","updatedMessages","newUser","updatedUsers","preventDefault","emit","joinRoom","newRoom","params","getRoomMessages","i","alert","Loader","color","size","Login","history","useHistory","inputRef","useRef","push","current","focus","formik","useFormik","initialValues","validationSchema","Yup","max","required","values","handleSubmit","touched","errors","handleChange","onBlur","handleBlur","Register","ref","ProtectedRoute","Component","component","rest","render","props","to","pathname","from","location","ToastNotification","position","autoClose","hideProgressBar","newestOnTop","pauseOnFocusLoss","App","getItem","headers","Authorization","verifyUser","exact","path","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","authReducer","roomReducer","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.b056872f.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface CreateRoomProps {\n  roomText: string;\n  setRoomText: (e: any) => void;\n  create: () => void;\n}\n\nexport const CreateRoom: React.FC<CreateRoomProps> = ({\n  roomText,\n  setRoomText,\n  create,\n}) => {\n  return (\n    <div className=\"flex justify-center mb-4\">\n      <input\n        value={roomText}\n        onChange={(e) => setRoomText(e.target.value)}\n        className=\"px-4 py-2 rounded focus:outline-none text-gray-600 bg-gray-100\"\n        type=\"text\"\n        placeholder=\"Room name\"\n      />\n      <button\n        className=\"ml-4 bg-red-600 px-2 w-28 rounded focus:outline-none hover:bg-red-700\"\n        onClick={create}\n      >\n        Enter\n      </button>\n    </div>\n  );\n};\n","import React, { FormEvent } from \"react\";\n\ninterface FormProps {\n  sendMessage: (e: FormEvent<HTMLFormElement>) => void;\n  text: string;\n  setText: (e: any) => void;\n}\n\nexport const Form: React.FC<FormProps> = ({ sendMessage, text, setText }) => {\n  return (\n    <form\n      onSubmit={(e) => sendMessage(e)}\n      className=\"flex items-center justify-center pt-4\"\n    >\n      <input\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        className=\"w-1/2 p-4 rounded-lg outline-none border-0 text-gray-600\"\n        type=\"text\"\n        placeholder=\"Send message\"\n      />\n      <button className=\"p-4 bg-gray-400 rounded-lg ml-4 focus:outline-none hover:bg-gray-500 text-gray-700 hover:text-gray-300\">\n        Send message\n      </button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\ninterface MessageProps {\n  message: string;\n  userId: string;\n  user: string;\n}\n\nexport const Message: React.FC<MessageProps> = ({ message, userId, user }) => {\n  const { username } = useSelector((state: any) => state.auth);\n\n  return (\n    <div id=\"test\" className={`px-4 py-2`}>\n      <h2\n        className={`font-bold ${\n          username === user ? \"text-red-400\" : \"text-blue-200\"\n        }`}\n      >\n        {user}\n      </h2>\n      <span className=\"text-gray-400\">{message}</span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport RoomType from \"../types/RoomType\";\nimport MessageType from \"../types/MessageType\";\nimport { Message } from \"./Message\";\n\ninterface MessageBoxProps {\n  room: RoomType | undefined;\n}\n\nexport const MessageBox: React.FC<MessageBoxProps> = ({ room }) => {\n  const [scroll, setScroll] = useState(0);\n  let messages: MessageType[] | undefined;\n  if (room !== undefined) {\n    messages = room.messages;\n  }\n\n  useEffect(() => {\n    const messageBox = document.getElementById(\"message-box\");\n    if (messageBox) {\n      setScroll(messageBox.scrollHeight);\n      messageBox.scrollTop = scroll;\n    }\n  }, [room, scroll]);\n\n  return (\n    <div\n      id=\"message-box\"\n      className=\"box-border h-3/5 overflow-scroll p-4 border-4 border-gray-500 rounded ml-4\"\n    >\n      {messages && messages.length\n        ? messages.map(({ _id, userId, message, username }) => (\n            <ul key={_id}>\n              <Message message={message} userId={userId} user={username} />\n            </ul>\n          ))\n        : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport RoomType from \"../types/RoomType\";\n\ninterface RoomProps {\n  room: RoomType;\n  join: (room: RoomType) => void;\n}\n\nexport const Room: React.FC<RoomProps> = ({ room, join }) => {\n  return (\n    <div\n      key={String(room._id)}\n      onClick={() => join(room)}\n      className=\"flex cursor-pointer hover:bg-gray-800 align-middle py-4 px-2 w-40 text-gray-300 text-sm\"\n    >\n      <span className=\"truncate ...\">{room.name}</span>\n    </div>\n  );\n};\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  // DEV\n  baseURL: `https://react-chatter-api.herokuapp.com/api`,\n  // PROD\n});\n\nexport default instance;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport instance from \"../../api\";\nimport { AppThunk } from \"../../app/store\";\nimport RoomType from \"../../types/RoomType\";\n\ninterface AuthState {\n  isLoggedIn: boolean;\n  userId: string | undefined;\n  username: string | undefined;\n  socketId: string;\n  room: RoomType | undefined;\n  loading: boolean;\n}\n\nconst initialState: AuthState = {\n  isLoggedIn: false,\n  userId: undefined,\n  username: undefined,\n  socketId: \"\",\n  room: undefined,\n  loading: false,\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    saveUser: (state, action: PayloadAction<string>) => {\n      state.socketId = action.payload;\n    },\n\n    setRoom: (state, action: PayloadAction<RoomType | undefined>) => {\n      state.room = action.payload;\n    },\n\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n    },\n\n    login: (state, action: PayloadAction<any>) => {\n      const { userId, username, token } = action.payload;\n      state.isLoggedIn = true;\n      state.userId = userId;\n      state.username = username;\n      state.loading = false;\n      localStorage.setItem(\"token\", token);\n    },\n\n    register: (state, action: PayloadAction<any>) => {\n      const { userId, username, token } = action.payload;\n      state.isLoggedIn = true;\n      state.userId = userId;\n      state.username = username;\n      state.loading = false;\n      localStorage.setItem(\"token\", token);\n    },\n\n    logout: (state) => {\n      state.isLoggedIn = false;\n      state.userId = undefined;\n      state.username = undefined;\n      localStorage.removeItem(\"token\");\n      toast.success(\"Successfully logged out!\");\n    },\n\n    resetUser: (state) => {\n      state.isLoggedIn = false;\n      state.userId = undefined;\n      state.username = undefined;\n      localStorage.removeItem(\"token\");\n    },\n\n    verify: (state, action: PayloadAction<any>) => {\n      const { _id, username } = action.payload;\n      state.isLoggedIn = true;\n      state.userId = _id;\n      state.username = username;\n      state.loading = false;\n    },\n  },\n});\n\nexport const loginUser = (\n  username: string,\n  password: string\n): AppThunk => async (dispatch) => {\n  try {\n    dispatch(setLoading(true));\n    const { data } = await instance.post(\"/auth/login\", { username, password });\n    dispatch(login(data));\n    return data;\n  } catch (err) {\n    dispatch(setLoading(false));\n    toast.error(\"Invalid username/password combination.\");\n    dispatch(resetUser());\n    console.log(err);\n  }\n};\n\nexport const registerUser = (\n  email: string,\n  username: string,\n  password: string\n): AppThunk => async (dispatch) => {\n  try {\n    dispatch(setLoading(true));\n    const { data } = await instance.post(\"/auth/register\", {\n      email,\n      username,\n      password,\n    });\n    dispatch(register(data));\n    return data;\n  } catch (err) {\n    dispatch(setLoading(false));\n    toast.error(err.response.data);\n    dispatch(resetUser());\n  }\n};\n\nexport const verifyUser = (token: string): AppThunk => async (dispatch) => {\n  try {\n    const { data } = await instance.get(\"/auth/verify\", {\n      headers: { Authorization: `${token}` },\n    });\n    if (data) {\n      dispatch(verify(data));\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getRoomMessages = (room: RoomType): AppThunk => async (\n  dispatch\n) => {\n  try {\n    const { _id } = room;\n    const { data } = await instance.get(\"/room/get-room\", {\n      params: { _id },\n    });\n    dispatch(setRoom(data));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const {\n  saveUser,\n  setRoom,\n  setLoading,\n  login,\n  register,\n  logout,\n  verify,\n  resetUser,\n} = authSlice.actions;\n\nexport default authSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport instance from \"../../api\";\nimport { AppThunk } from \"../../app/store\";\nimport RoomType from \"../../types/RoomType\";\n\ninterface RoomState {\n  rooms: RoomType[];\n}\n\nconst initialState: RoomState = {\n  rooms: [],\n};\n\nexport const roomSlice = createSlice({\n  name: \"room\",\n  initialState,\n  reducers: {\n    setRooms: (state, action: PayloadAction<any>) => {\n      state.rooms = action.payload;\n    },\n  },\n});\n\nexport const { setRooms } = roomSlice.actions;\n\nexport const getRooms = (): AppThunk => async (dispatch) => {\n  try {\n    const { data } = await instance.get(\"/room\");\n    dispatch(setRooms(data));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const createRoom = (name: String): AppThunk => async (dispatch) => {\n  try {\n    const { data } = await instance.post(\"/room\", { name });\n    dispatch(setRooms(data));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport default roomSlice.reducer;\n","import { io } from \"socket.io-client\";\n\n// DEV\nconst socket = io(\"https://react-chatter-api.herokuapp.com/\", {\n  transports: [\"websocket\"],\n});\n// PROD\n// const socket = io(\"http://localhost:5000\", { transports: [\"websocket\"] });\n\nexport default socket;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../app/store\";\nimport { CreateRoom } from \"../components/CreateRoom\";\nimport { Form } from \"../components/Form\";\nimport { MessageBox } from \"../components/MessageBox\";\nimport { Room } from \"../components/Room\";\nimport { getRoomMessages, setRoom, logout } from \"../features/auth/authSlice\";\nimport { getRooms, createRoom } from \"../features/room/roomSlice\";\nimport socket from \"../socket\";\nimport RoomType from \"../types/RoomType\";\nimport { toast } from \"react-toastify\";\n\nexport const Home = () => {\n  const [text, setText] = useState<string>(\"\");\n  const [roomText, setRoomText] = useState<string>(\"\");\n  const [toggle, setToggle] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  const { room, userId, username } = useSelector(\n    (state: RootState) => state.auth\n  );\n  const { rooms } = useSelector((state: RootState) => state.room);\n\n  useEffect(() => {\n    dispatch(getRooms());\n    socket.on(\"update-messages\", (updatedMessages: RoomType) =>\n      dispatch(setRoom(updatedMessages))\n    );\n    socket.on(\n      \"new-user-joined\",\n      async (newUser: string, name: string, updatedUsers: RoomType) => {\n        console.log(`${newUser} has joined ${name}!`);\n        toast.success(`${newUser} has joined ${name}!`);\n        if (updatedUsers !== null) {\n          await dispatch(setRoom(updatedUsers));\n        }\n      }\n    );\n    socket.on(\"user-left\", (name: String, newUser: string) => {\n      console.log(`${newUser} has left ${name}...`);\n      toast.error(`${newUser} has left ${name}...`);\n    });\n  }, [dispatch]);\n\n  const sendMessage = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setText(\"\");\n    socket.emit(\"new-message\", room, text, userId, username);\n  };\n\n  const joinRoom = (newRoom: RoomType) => {\n    if (room !== undefined && room.name !== newRoom.name) {\n      socket.emit(\"leave-room\", room, username);\n    }\n    if (room?.name !== newRoom.name) {\n      dispatch(getRoomMessages(newRoom));\n      socket.emit(\"join-room\", newRoom, username);\n    }\n  };\n\n  const create = () => {\n    if (roomText.length) {\n      dispatch(createRoom(roomText));\n      setToggle(!toggle);\n    } else {\n      alert(\"Please enter a name\");\n    }\n  };\n\n  const logoutUser = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <div className=\"bg-gray-700 flex\">\n      <div className=\"flex flex-col text-center align-middle relative overflow-hidden  border-r-2 border-black\">\n        <div className=\"h-full\">\n          {rooms && rooms.length\n            ? rooms.map((room: any, i: any) => (\n                <Room key={room._id} room={room} join={joinRoom} />\n              ))\n            : null}\n        </div>\n\n        <button\n          className=\"focus:outline-none bg-gray-600 w-32 self-center py-4 self-start text-xs rounded hover:bg-gray-800 mb-12 text-white font-bold\"\n          onClick={() => setToggle(!toggle)}\n        >\n          Create Room\n        </button>\n      </div>\n      <div className=\"bg-gray-700 h-screen text-white flex flex-col justify-center flex-1\">\n        <button\n          className=\"focus:outline-none bg-gray-600 font-semibold w-20 py-2 absolute right-0 top-0 text-xs rounded hover:bg-gray-800 mb-4 m-4\"\n          onClick={logoutUser}\n        >\n          Logout\n        </button>\n        {toggle && (\n          <CreateRoom\n            roomText={roomText}\n            setRoomText={setRoomText}\n            create={create}\n          />\n        )}\n        <MessageBox room={room} />\n        {room && (\n          <Form sendMessage={sendMessage} setText={setText} text={text} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport const Loader = ({ loading }) => {\n  return (\n    <div className=\"flex justify-center items-center h-screen\">\n      <ClipLoader color=\"red\" loading={loading} size={150} />\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { RootState } from \"../app/store\";\nimport { Loader } from \"../components/Loader\";\nimport { loginUser } from \"../features/auth/authSlice\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const Login = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { isLoggedIn, loading } = useSelector((state: RootState) => state.auth);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.push(\"/\");\n    } else {\n      if (!inputRef.current) {\n        return;\n      }\n      inputRef.current.focus();\n    }\n  }, [isLoggedIn, history]);\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      username: Yup.string()\n        .max(8, \"Must be 8 characters or less\")\n        .required(\"Required\"),\n      password: Yup.string()\n        .max(8, \"Must be 8 characters or less\")\n        .required(\"Required\"),\n    }),\n    onSubmit: async (values) => {\n      const { username, password } = values;\n      const res = await dispatch(loginUser(username, password));\n      if (res !== undefined) {\n        history.push(\"/\");\n      }\n    },\n  });\n\n  if (loading) return <Loader loading={loading} />;\n\n  return (\n    <form\n      onSubmit={formik.handleSubmit}\n      className=\"h-screen bg-red-100 flex justify-center items-center text-gray-500\"\n    >\n      <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 flex flex-col w-1/2 shadow-xl\">\n        <div className=\"mb-4\">\n          <h1 className=\"text-center font-semibold text-gray-700 text-xl mb-12\">\n            Login\n          </h1>\n\n          {formik.touched.username && formik.errors.username ? (\n            <span className=\"text-red-500\">{formik.errors.username}</span>\n          ) : null}\n          <label className=\"block text-grey-darker text-sm font-bold mb-2\">\n            Username\n          </label>\n          <input\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.username}\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker\"\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"Username\"\n          />\n        </div>\n        <div className=\"mb-6\">\n          {formik.touched.password && formik.errors.password ? (\n            <span className=\"text-red-500\">{formik.errors.password}</span>\n          ) : null}\n          <label className=\"block text-grey-darker text-sm font-bold mb-2\">\n            Password\n          </label>\n          <input\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            className=\"shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"******************\"\n          />\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <button\n            className=\"bg-red-400 hover:bg-red-500 text-white font-semibold py-2 px-4 rounded\"\n            type=\"submit\"\n          >\n            Sign in\n          </button>\n\n          <span\n            onClick={() => history.push(\"/register\")}\n            className=\"font-bold text-sm cursor-pointer text-gray-400 hover:text-gray-500\"\n          >\n            Don't have an account?\n          </span>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { RootState } from \"../app/store\";\nimport { Loader } from \"../components/Loader\";\nimport { registerUser } from \"../features/auth/authSlice\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport const Register = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { isLoggedIn, loading } = useSelector((state: RootState) => state.auth);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email()\n        .max(30, \"Email must be 30 characters or less\")\n        .required(\"Required\"),\n      username: Yup.string()\n        .max(8, \"Must be 8 characters or less\")\n        .required(\"Required\"),\n      password: Yup.string()\n        .max(8, \"Must be 8 characters or less\")\n        .required(\"Required\"),\n    }),\n    onSubmit: async (values) => {\n      const { email, username, password } = values;\n      const res = await dispatch(registerUser(email, username, password));\n      if (res !== undefined) {\n        history.push(\"/\");\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.push(\"/\");\n    } else {\n      if (!inputRef.current) {\n        return;\n      }\n\n      inputRef.current.focus();\n    }\n  }, [isLoggedIn, history]);\n\n  if (loading) return <Loader loading={loading} />;\n\n  return (\n    <form\n      onSubmit={formik.handleSubmit}\n      className=\"h-screen bg-red-100 flex justify-center items-center text-gray-500\"\n    >\n      <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 flex flex-col w-1/2 shadow-xl\">\n        <div className=\"mb-4\">\n          <h1 className=\"text-center font-semibold text-gray-700 text-xl mb-12\">\n            Register\n          </h1>\n          {formik.touched.email && formik.errors.email ? (\n            <span className=\"text-red-500\">{formik.errors.email}!</span>\n          ) : null}\n          <label className=\"block text-grey-darker text-sm font-bold mb-2\">\n            Email\n          </label>\n          <input\n            ref={inputRef}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker mb-3\"\n            id=\"email\"\n            type=\"text\"\n            placeholder=\"Email\"\n          />\n          {formik.touched.username && formik.errors.username ? (\n            <span className=\"text-red-500\">{formik.errors.username}</span>\n          ) : null}\n          <label className=\"block text-grey-darker text-sm font-bold mb-2\">\n            Username\n          </label>\n          <input\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.username}\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker\"\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"Username\"\n          />\n        </div>\n        <div className=\"mb-6\">\n          {formik.touched.password && formik.errors.password ? (\n            <span className=\"text-red-500\">{formik.errors.password}</span>\n          ) : null}\n          <label className=\"block text-grey-darker text-sm font-bold mb-2\">\n            Password\n          </label>\n          <input\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            className=\"shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"******************\"\n          />\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <button\n            className=\"bg-red-400 hover:bg-red-500 text-white font-semibold py-2 px-4 rounded\"\n            type=\"submit\"\n          >\n            Sign Up\n          </button>\n\n          <span\n            onClick={() => history.push(\"/login\")}\n            className=\"font-bold text-sm cursor-pointer text-gray-400 hover:text-gray-500\"\n          >\n            Have an account?\n          </span>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, user = false, ...rest }) => {\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isLoggedIn) {\n          return <Component {...rest} {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\n\nexport const ToastNotification = () => {\n  return (\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={2500}\n      hideProgressBar={false}\n      newestOnTop={false}\n      pauseOnFocusLoss={false}\n    />\n  );\n};\n","import React, { useEffect } from \"react\";\r\nimport { Home } from \"./views/Home\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { verifyUser } from \"./features/auth/authSlice\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Login } from \"./views/Login\";\r\nimport { Register } from \"./views/Register\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport { ToastNotification } from \"./components/ToastNotification\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      dispatch(verifyUser(token));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <ToastNotification />\r\n      <Route exact path=\"/login\" component={Login} />\r\n      <Route exact path=\"/register\" component={Register} />\r\n      <ProtectedRoute exact path=\"/\" component={Home} />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/counterSlice\";\r\nimport authReducer from \"../features/auth/authSlice\";\r\nimport roomReducer from \"../features/room/roomSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    auth: authReducer,\r\n    room: roomReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}